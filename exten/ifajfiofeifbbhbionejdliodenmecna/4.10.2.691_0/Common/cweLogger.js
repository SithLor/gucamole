function LoggerInstance(){return Logger.instance}function Logger(){this.m_entries=[];return this}Logger.instance=null;Logger.initialize=function(){null===Logger.instance&&(Logger.instance=window.dji.logger,window.dji.logger.logLevel(window.dji.logger.levels.ERROR))};Logger.prototype.group=function(){};Logger.prototype.groupCollapsed=function(){};Logger.prototype.groupEnd=function(){};Logger.prototype.debug=function(){};Logger.prototype.error=function(){};Logger.prototype.info=function(){};
Logger.prototype.log=function(){};Logger.prototype.warn=function(){};
Logger.prototype.monitor=function(){let a=[...arguments].map(c=>this.filterObject(c));var b=new Date;b={timestamp:b.getTime(),date:b.toUTCString(),event:void 0,reason:void 0,error:void 0,details:a};if(0<a.length&&a[0].__proto__===Object.prototype&&(a[0].event&&(b.event=a[0].event,delete a[0].event),a[0].reason&&(b.reason=a[0].reason,delete a[0].reason),a[0].error instanceof Error)){const c=a[0].error;a[0].error={code:c.code,message:c.message,stack:c.stack}}this.m_entries.push(b)};
Logger.prototype.filterObject=function(a){if(a.__proto__===Object.prototype){a=Object.assign({},a);a.access_token&&(a.access_token="***");for(let b of Object.keys(a))try{a[b]instanceof Object&&a[b].__proto__===Object.prototype&&(a[b]=this.filterObject(a[b]))}catch(c){}}return a};Logger.prototype.dump=function(){return JSON.stringify(this.m_entries)};Logger.initialize();
